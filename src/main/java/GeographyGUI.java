/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */


import org.apache.commons.csv.CSVFormat;
import org.apache.commons.csv.CSVParser;
import org.apache.commons.csv.CSVRecord;

import java.io.File;
import java.io.IOException;
import java.nio.charset.Charset;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.swing.JFileChooser;

import interpolation.NearestNeighborsGridInterpolator;
import interpolation.Point2D;
import interpolation.Polygon;

/**
 *
 * @author alsm0813
 */
public class GeographyGUI extends javax.swing.JFrame {

    /**
     * Creates new form GeographyGUI
     */
    public GeographyGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        zondDataLabel = new javax.swing.JLabel();
        zondDataTextField = new javax.swing.JTextField();
        zondDataButton = new javax.swing.JButton();
        boundariesLabel = new javax.swing.JLabel();
        boundariesTextField = new javax.swing.JTextField();
        boundariesButton = new javax.swing.JButton();
        gridStepTextField = new javax.swing.JTextField();
        launchButton = new javax.swing.JButton();
        gridStepLabel = new javax.swing.JLabel();
        interpolationProgressBar = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        zondDataLabel.setText("ZondData");

        zondDataTextField.setEnabled(false);
        zondDataTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zondDataTextFieldActionPerformed(evt);
            }
        });

        zondDataButton.setText("Choose");
        zondDataButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zondDataButtonActionPerformed(evt);
            }
        });

        boundariesLabel.setText("Boundaries");

        boundariesTextField.setEnabled(false);
        boundariesTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boundariesTextFieldActionPerformed(evt);
            }
        });

        boundariesButton.setText("Choose");
        boundariesButton.setActionCommand("");
        boundariesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boundariesButtonActionPerformed(evt);
            }
        });

        gridStepTextField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        gridStepTextField.setText("1");
        gridStepTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gridStepTextFieldActionPerformed(evt);
            }
        });

        launchButton.setText("Start");
        launchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                launchButtonActionPerformed(evt);
            }
        });

        gridStepLabel.setText("Grid Step");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(zondDataLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(boundariesLabel))
                        .addGap(17, 17, 17))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(gridStepLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(gridStepTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(interpolationProgressBar, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE))
                    .addComponent(zondDataTextField)
                    .addComponent(boundariesTextField))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(boundariesButton)
                    .addComponent(zondDataButton)
                    .addComponent(launchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(75, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                        .addComponent(zondDataButton, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                        .addComponent(zondDataLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(zondDataTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(boundariesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(boundariesButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(boundariesTextField, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(launchButton)
                    .addComponent(interpolationProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(gridStepTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(gridStepLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(45, 45, 45))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void gridStepTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gridStepTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gridStepTextFieldActionPerformed

    private void zondDataTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zondDataTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_zondDataTextFieldActionPerformed

    private void zondDataButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zondDataButtonActionPerformed
        JFileChooser fileopen = new JFileChooser();
        int ret = fileopen.showDialog(null, "Open");
        if (ret == JFileChooser.APPROVE_OPTION) {
            File file = fileopen.getSelectedFile();
            zondDataTextField.setText(file.getAbsolutePath());
        }
    }//GEN-LAST:event_zondDataButtonActionPerformed

    private void boundariesTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boundariesTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_boundariesTextFieldActionPerformed

    private void boundariesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boundariesButtonActionPerformed
        JFileChooser fileopen = new JFileChooser();
        int ret = fileopen.showDialog(null, "Open");
        if (ret == JFileChooser.APPROVE_OPTION) {
            File file = fileopen.getSelectedFile();
            boundariesTextField.setText(file.getAbsolutePath());
        }
    }//GEN-LAST:event_boundariesButtonActionPerformed

    private void launchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_launchButtonActionPerformed
        try {
            Map<Point2D, Double> zondData = new HashMap<Point2D, Double>();
            CSVParser parser = CSVParser.parse(new File(zondDataTextField.getText()), Charset.defaultCharset(), CSVFormat.DEFAULT.withDelimiter(';'));
            for (CSVRecord csvRecord : parser) {
                zondData.put(new Point2D(
                                Integer.parseInt(csvRecord.get(0)),
                                Integer.parseInt(csvRecord.get(1))
                        ),
                        Double.parseDouble(csvRecord.get(2))
                );
            }
            System.out.println(zondData);

            List<Point2D> boundaries = new ArrayList<Point2D>();
            parser = CSVParser.parse(new File(boundariesTextField.getText()), Charset.defaultCharset(), CSVFormat.DEFAULT.withDelimiter(';'));
            for (CSVRecord csvRecord : parser) {
                boundaries.add(new Point2D(
                        Integer.parseInt(csvRecord.get(0)),
                        Integer.parseInt(csvRecord.get(1))
                ));
            }
            System.out.println(boundaries);

            Polygon polygon = new Polygon(boundaries);

            NearestNeighborsGridInterpolator interpolator = new NearestNeighborsGridInterpolator();
            Map<Point2D, Double>  interpolationData = interpolator.interpolate(zondData, polygon, 1);
            new GridRenderer().render(interpolationData, polygon);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_launchButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GeographyGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GeographyGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GeographyGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GeographyGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GeographyGUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton boundariesButton;
    private javax.swing.JLabel boundariesLabel;
    private javax.swing.JTextField boundariesTextField;
    private javax.swing.JLabel gridStepLabel;
    private javax.swing.JTextField gridStepTextField;
    private javax.swing.JProgressBar interpolationProgressBar;
    private javax.swing.JButton launchButton;
    private javax.swing.JButton zondDataButton;
    private javax.swing.JLabel zondDataLabel;
    private javax.swing.JTextField zondDataTextField;
    // End of variables declaration//GEN-END:variables
}
